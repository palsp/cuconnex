name: deploy-users

on:
  push:
    branches: 
      - develop
    paths:
      - 'users/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
       # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/users/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            users/node_modules
          key: ${{ runner.os }}-${{ hashFiles('users/package-lock.json') }}  
      - name: Build js file
        run: | 
          cd users 
          npm install del-cli typescript  
          npm run build 
      - name: Login Docker
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./users
          push: true
          tags: palsp/connex-users
          cache-from: type=local,src=/tmp/users/.buildx-cache
          cache-to: type=local,dest=/tmp/users/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/users/.buildx-cache
          mv /tmp/users/.buildx-cache-new /tmp/users/.buildx-cache
      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Use k8s context
        run: doctl kubernetes cluster kubeconfig save cu-connex 
      - name: Restart deployment
        run: kubectl rollout restart deployment users-depl

